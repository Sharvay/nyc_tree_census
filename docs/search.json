[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NYC Tree Census",
    "section": "",
    "text": "1 Introduction\nTrees form the backbone of urban ecosystems, offering a multitude of benefits that enhance both environmental quality and human well-being. They act as natural air purifiers, absorbing pollutants and releasing oxygen, thereby improving air quality. Their canopies provide shade, mitigating the urban heat island effect and reducing energy consumption by lowering the need for air conditioning. Additionally, trees contribute to storm-water management by intercepting rainfall, reducing runoff, and preventing soil erosion. Beyond their environmental contributions, urban trees enhance the aesthetic appeal of cityscapes, provide habitats for wildlife, and offer recreational spaces that promote mental health and community cohesion.\nRecognizing these benefits, conducting a tree census becomes essential for effective urban forestry management. A comprehensive inventory of street trees allows city planners and environmentalists to assess the current state of the urban forest, identify areas lacking green cover, and develop strategies for planting and maintenance. It also aids in monitoring tree health, detecting diseases or pest infestations early, and ensuring the longevity of the urban canopy. Moreover, data from tree censuses can inform policies aimed at enhancing biodiversity, improving air quality, and adapting to climate change.\nIn 2015, NYC conducted its third Street Tree Census, engaging volunteers in the city’s largest citizen science effort to document over 666,000 trees. This extensive dataset serves as a critical resource for understanding the composition and condition of New York City’s urban forest. This dataset provides a unique opportunity to explore several key areas:\n\nTree Health and Environmental Impact:\nInvestigate factors affecting tree health and their relationship to size and location.\nInfrastructure Interaction:\nExplore the impact of tree placement on sidewalk damage and other infrastructure issues.\nCommunity Engagement:\nAssess how Stewardship activities influence tree health and urban forestry.\nUrban Planning and Spatial Trends:\nAnalyze tree distribution and species diversity across boroughs and neighborhoods.\nTree Vulnerability:\nIdentify common issues affecting tree trunks, branches, and roots, and their locations.\nBiodiversity Analysis:\nEvaluate the diversity of NYC’s tree population and its implications for urban forestry.\nTemporal Insights:\nExamine patterns in tree mapping and their significance for urban forest management.\nClimate Adaptation:\nDetermine which tree species are best suited for NYC’s urban environment.\n\nOur project aims to analyze these aspects, leveraging this rich dataset to derive actionable insights for urban forestry management",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nThe “2015 Street Tree Census - Tree Data” dataset was compiled by the New York City Department of Parks & Recreation in collaboration with volunteers and partner organizations between May 2015 and October 2016. This comprehensive dataset encompasses detailed information on 666,134 street trees across New York City’s five boroughs.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "",
    "text": "2.1.1 Data Collection and Contributors:\nThe dataset was collected through a large-scale citizen science initiative, marking the third decadal street tree census in New York City’s history. Volunteers, organized by NYC Parks & Recreation and partner organizations, conducted field surveys to document various attributes of street trees. This collaborative effort aimed to create an up-to-date inventory of the city’s urban forest.\n\nSource: 2015 Street Tree Census - Tree Data\nData Format and Structure:\nThe data is presented in a tabular format, with each row representing an individual tree and columns detailing its attributes. Key attributes include:\nTree Identification:\n\nTree ID: A unique identifier assigned to each tree. Block ID: Identifier for the block where the tree is located. Species Information:\nSpecies Latin Name: Scientific name of the tree species. Species Common Name: Common name of the tree species. Physical Characteristics:\nDiameter at Breast Height (DBH): Trunk diameter measured at 4.5 feet above ground. Tree Health: Condition of the tree, categorized as Good, Fair, Poor, or Dead. Root Guards: Presence of root protection measures. Trunk, Branch, and Sidewalk Conditions: Assessment of physical conditions affecting the tree and its surroundings. Location Details:\nLatitude and Longitude: Geographic coordinates of the tree’s location. Address: Nearest street address to the tree. Borough and Community Board: Administrative divisions where the tree is situated. Stewardship and Infrastructure:\nStewardship Level: Indicates the level of care provided by individuals or groups. Sidewalk Width and Material: Details about the sidewalk adjacent to the tree. Curb Location: Position of the tree relative to the curb. Frequency of Updates:\n\nThe 2015 Street Tree Census was a one-time data collection effort conducted over approximately 18 months. As such, the dataset is static and not subject to regular updates. It represents a snapshot of New York City’s street trees during the period of May 2015 to October 2016.\nDimensions and Scope:\nThe dataset comprises 666,134 records, each corresponding to an individual street tree. It includes a wide range of attributes, both categorical and numerical, allowing for diverse analytical approaches. The spatial information provided enables geospatial analyses, facilitating the examination of tree distribution patterns across different neighborhoods and boroughs. Additionally, the dataset’s size and richness support robust statistical analyses and data visualizations, which can uncover trends and insights pertinent to urban forestry management.\nPotential Issues and Considerations:\nWhile the dataset is comprehensive, potential issues include inconsistencies in data entry due to the large number of volunteers involved and the inherent challenges of accurately assessing tree health. We plan to import the data using R’s read.csv() function, ensuring proper handling of data types and missing values.\nFrequency of Updates:\nThe dataset is static, representing a one-time snapshot of the NYC street trees as they existed during the census period (2015–2016). It does not receive updates and serves as a historical record.\nImport Methodology:\nThe dataset will be imported using R’s read.csv() function to handle its large size efficiently.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n2.2.1 R Code\n\n\nCode\n# Library Imports\nlibrary(tidyverse)  \n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(readr)      \nlibrary(ggplot2)    \nlibrary(dplyr)\n\n\n\n\nCode\ntree_data &lt;- read_csv(\"../2015_Street_Tree_Census_-_Tree_Data_20241120.csv\")\n\n\nRows: 683788 Columns: 45\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (26): created_at, curb_loc, status, health, spc_latin, spc_common, stewa...\ndbl (19): tree_id, block_id, tree_dbh, stump_diam, postcode, community board...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\ntree_data |&gt;\n  summarise(across(everything(), ~ sum(is.na(.) | . == \"\" | . == \"None\")))\n\n\n# A tibble: 1 × 45\n  tree_id block_id created_at tree_dbh stump_diam curb_loc status health\n    &lt;int&gt;    &lt;int&gt;      &lt;int&gt;    &lt;int&gt;      &lt;int&gt;    &lt;int&gt;  &lt;int&gt;  &lt;int&gt;\n1       0        0          0        0          0        0      0  31616\n# ℹ 37 more variables: spc_latin &lt;int&gt;, spc_common &lt;int&gt;, steward &lt;int&gt;,\n#   guards &lt;int&gt;, sidewalk &lt;int&gt;, user_type &lt;int&gt;, problems &lt;int&gt;,\n#   root_stone &lt;int&gt;, root_grate &lt;int&gt;, root_other &lt;int&gt;, trunk_wire &lt;int&gt;,\n#   trnk_light &lt;int&gt;, trnk_other &lt;int&gt;, brch_light &lt;int&gt;, brch_shoe &lt;int&gt;,\n#   brch_other &lt;int&gt;, address &lt;int&gt;, postcode &lt;int&gt;, zip_city &lt;int&gt;,\n#   `community board` &lt;int&gt;, borocode &lt;int&gt;, borough &lt;int&gt;, cncldist &lt;int&gt;,\n#   st_assem &lt;int&gt;, st_senate &lt;int&gt;, nta &lt;int&gt;, nta_name &lt;int&gt;, …\n\n\n\n\nCode\ntree_data_with_na &lt;- tree_data |&gt;\n  mutate(across(everything(), ~ ifelse(is.na(.) | . == \"\" | . == \" \" | . == \"None\", NA, .)))\n\n\n\n\nCode\n# Step 1: Count NA values in each column\nna_counts &lt;- tree_data_with_na %&gt;%\n  summarise(across(everything(), ~ sum(is.na(.)))) %&gt;%\n  t() %&gt;%\n  as.data.frame()\n\n# Add column names for clarity\ncolnames(na_counts) &lt;- c(\"NA_Count\")\nna_counts$Column &lt;- rownames(na_counts)\nrownames(na_counts) &lt;- NULL\n\n# Step 2: Calculate total rows and convert counts to percentages\ntotal_rows &lt;- nrow(tree_data)\nna_counts &lt;- na_counts %&gt;%\n  mutate(Percentage = (NA_Count / total_rows) * 100)\n\n# Step 3: Filter out columns with no NA values\nna_counts_filtered &lt;- na_counts %&gt;%\n  filter(NA_Count &gt; 0)\n\n# Step 4: Plot NA percentages for remaining columns\nggplot(na_counts_filtered, aes(x = reorder(Column, -Percentage), y = Percentage)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\", color = \"black\", width = 0.7) +\n  geom_text(aes(label = paste0(round(Percentage, 1), \"%\")), \n            vjust = -0.5, size = 4, color = \"black\") +\n  theme_minimal() +\n  labs(\n    title = \"Percentage of Missing Values in Columns with NA Values\",\n    x = \"Columns\",\n    y = \"Percentage of Missing Values\"\n  ) +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 12, face = \"bold\"),\n    axis.title.y = element_text(size = 12, face = \"bold\")\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Step 1: Convert all columns to character type (except row identifier)\ntree_data_char &lt;- tree_data_with_na %&gt;%\n  mutate(across(everything(), as.character))\n\n# Step 2: Add a row identifier\ntree_data_char &lt;- tree_data_char %&gt;%\n  mutate(row = row_number())\n\n# Step 3: Reshape data into long format, excluding the `row` column\nna_heatmap_data &lt;- tree_data_char %&gt;%\n  pivot_longer(cols = -row, names_to = \"Column\", values_to = \"Value\") %&gt;%\n  mutate(Missing = is.na(Value) | Value == \"\" | Value == \"None\")  # Detect missing values\n\n# Step 4: Plot the heatmap\nggplot(na_heatmap_data, aes(x = Column, y = row, fill = Missing)) +\n  geom_tile() +\n  scale_fill_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"white\")) +\n  theme_minimal() +\n  labs(\n    title = \"Heatmap of Missing Values\",\n    x = \"Columns\",\n    y = \"Rows\",\n    fill = \"Missing\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.text.y = element_blank(),\n    plot.title = element_text(hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Step 1: Convert all columns to character type (except row identifier)\ntree_data_char &lt;- tree_data_with_na %&gt;%\n  mutate(across(everything(), as.character))\n\n# Step 2: Identify columns with NA values\ncolumns_with_na &lt;- tree_data_char %&gt;%\n  summarise(across(everything(), ~ sum(is.na(.) | . == \"\" | . == \"None\"))) %&gt;%\n  select(where(~ . &gt; 0)) %&gt;%\n  names()\n\n# Step 3: Filter to include only columns with NA values and add row identifier\ntree_data_filtered &lt;- tree_data_char %&gt;%\n  select(all_of(columns_with_na)) %&gt;%\n  mutate(row = row_number())\n\n# Step 4: Reshape data into long format, excluding the `row` column\nna_heatmap_data &lt;- tree_data_filtered %&gt;%\n  pivot_longer(cols = -row, names_to = \"Column\", values_to = \"Value\") %&gt;%\n  mutate(Missing = is.na(Value) | Value == \"\" | Value == \"None\")  # Detect missing values\n\n# Step 5: Plot the heatmap\nggplot(na_heatmap_data, aes(x = Column, y = row, fill = Missing)) +\n  geom_tile() +\n  scale_fill_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"white\")) +\n  theme_minimal() +\n  labs(\n    title = \"Heatmap of Missing Values (Columns with NA Values Only)\",\n    x = \"Columns\",\n    y = \"Rows\",\n    fill = \"Missing\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.text.y = element_blank(),\n    plot.title = element_text(hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\n\n2.2.2 High Missing Value Columns\n\nguards: With 88.3% missing values, this column has the highest rate of missingness. The data on tree guards might not have been consistently collected, possibly because it was optional or difficult to assess during the survey.\nsteward: At 76% missing values, this column reflects limited data availability on tree stewardship. This may be due to a lack of reporting or complexity in identifying individuals or groups responsible for tree care.\nproblems: This column has 67% missing values. It indicates incomplete data on issues affecting the trees, which could result from challenges in identifying or documenting tree-related problems.\n\n\n\n\n2.2.3 Low Missing Value Columns\n\nColumns like spc_common, spc_latin, health, and sidewalk: These columns have around 4.6% missing values. These fields likely had better data collection protocols but still show gaps, potentially due to oversight or difficulty in identifying specific attributes (e.g., species or tree health conditions).\nbbl, bin, census tract, and council district: These columns exhibit very low missing values (less than 2%). These administrative or geographic fields were likely easier to document consistently, but small gaps might have occurred due to technical issues or incomplete records.\n\n\n\n\n2.2.4 Columns with No Missing Values\n\nMany columns in the dataset have no missing values, which indicates robust data collection for these fields. These complete columns will form a reliable foundation for further analysis.\n\n\n\n\n2.2.5 Nature of Missing Values\nThe dataset contains missing values in various non-uniform forms. Some values are represented as standard NA in R, while others are explicitly recorded as \"None\". Additionally, there are instances where missing values are represented as blank strings (\"\") or blank spaces (\" \"). This lack of uniformity highlights inconsistencies in data recording, likely stemming from variations in surveyor practices or data entry protocols.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  }
]