[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NYC Tree Census",
    "section": "",
    "text": "1 Introduction\nTrees are essential to urban ecosystems, providing critical benefits such as air purification, temperature regulation, storm-water management, and enhanced biodiversity. Their canopies mitigate the urban heat island effect, reduce energy consumption, and offer habitats for wildlife while improving mental well-being and fostering community cohesion. Recognizing these contributions, this project leverages NYC’s 2015 tree census data, a comprehensive inventory of over 666,000 street trees, to analyze their distribution, health, and impact. The dataset serves as a foundation for assessing the state of the urban forest, identifying areas for improvement, and developing strategies for sustainable urban forestry management.\n\nExpected Outcomes: Key Areas of Exploration\nThis extensive dataset serves as a critical resource for understanding the composition and condition of New York City’s urban forest. This dataset provides a unique opportunity to explore several key areas:\n\nTree Health and Environmental Impact:\nInvestigate factors affecting tree health and their relationship to size and location.\nInfrastructure Interaction:\nExplore the impact of tree placement on sidewalk damage and other infrastructure issues.\nCommunity Engagement:\nAssess how Stewardship activities influence tree health and urban forestry.\nUrban Planning and Spatial Trends:\nAnalyze tree distribution and species diversity across boroughs and neighborhoods.\nTree Vulnerability:\nIdentify common issues affecting tree trunks, branches, and roots, and their locations.\nBiodiversity Analysis:\nEvaluate the diversity of NYC’s tree population and its implications for urban forestry.\nTemporal Insights:\nExamine patterns in tree mapping and their significance for urban forest management.\nClimate Adaptation:\nDetermine which tree species are best suited for NYC’s urban environment.\n\nOur project aims to analyze these aspects, leveraging this rich dataset to derive actionable insights for urban forestry management",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nThe “2015 Street Tree Census - Tree Data” dataset is a comprehensive collection of information on New York City’s street trees, compiled by the NYC Department of Parks & Recreation in collaboration with volunteers and partner organizations between May 2015 and October 2016. Representing the largest citizen science initiative in the city’s history, the dataset includes detailed attributes for 666,134 recorded trees across New York City’s five boroughs.\nCode\n# Library Imports\nlibrary(tidyverse)  \nlibrary(readr)      \nlibrary(ggplot2)    \nlibrary(dplyr)\nCode\n# Importing the data, we are using partial data due to computational limits.\ntree_data &lt;- read_csv(\"../2015_Street_Tree_Census_-_Tree_Data_20241120.csv\", n_max = 266134)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "",
    "text": "Source : 2015 Street Tree Census - Tree Data\nData Collection :\nThe data was collected by trained volunteers and NYC Parks staff, using standardized protocols to ensure consistency. Each tree’s attributes, including species, diameter, health status, and geographic location, were recorded during the census. The data collection process also involved visual inspections and field surveys to gather accurate information on tree conditions and their interactions with surrounding infrastructure.\nData Format and Structure:\nThe data is presented in a tabular format, with each row representing an individual tree and columns detailing its attributes. Key attributes include:\n\nTree Identification : Unique Tree ID and Block ID for each tree.\n\nSpecies Information : Scientific (Latin) and common names of the tree species.\n\nPhysical Characteristics : Diameter at Breast Height (DBH), health status (Good, Fair, Poor, Dead), and presence of root guards. Assessment of trunk, branch.\nLocation Details : Geographic coordinates (latitude and longitude), nearest address, borough, and community board.\n\nStewardship and Infrastructure : Level of care provided, sidewalk details, and curb location.\n\nDimensions and Scope:\nThe dataset comprises 166,134 records and 45 columns, each corresponding to an individual street tree. It offers a rich combination of categorical and numerical variables suitable for diverse analytical approaches. Its spatial information enables geospatial analyses, such as examining tree distribution patterns across neighborhoods and boroughs. This richness makes the dataset particularly well-suited for exploratory data analysis, allowing us to uncover trends and insights relevant to urban forestry management.\nFrequency of Update :\nThe dataset is static, representing a one-time snapshot of the NYC street trees as they existed during the census period (2015–2016). It does not receive updates and serves as a historical record.\nImporting the Data :\nThe dataset will be imported using R’s read.csv() function to handle its large size efficiently.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\n# storing the data with missing values in a variable\ntree_data_with_na &lt;- tree_data |&gt;\n  mutate(across(everything(), ~ ifelse(is.na(.) | . == \"\" | . == \" \" | . == \"None\", NA, .)))\n\n# Step 1: Count NA values in each column\nna_counts &lt;- tree_data_with_na %&gt;%\n             summarise(across(everything(), ~ sum(is.na(.)))) %&gt;%\n             t() %&gt;%\n             as.data.frame()\n\n# Add column names for clarity\ncolnames(na_counts) &lt;- c(\"NA_Count\")\nna_counts$Column &lt;- rownames(na_counts)\nrownames(na_counts) &lt;- NULL\n\n# Step 2: Calculate total rows and convert counts to percentages\ntotal_rows &lt;- nrow(tree_data)\nna_counts &lt;- na_counts %&gt;%\n  mutate(Percentage = (NA_Count / total_rows) * 100)\n\n# Step 3: Filter out columns with no NA values\nna_counts_filtered &lt;- na_counts %&gt;%\n  filter(NA_Count &gt; 0)\n\n# Step 4: Plot NA percentages for remaining columns\nggplot(na_counts_filtered, aes(x = reorder(Column, -Percentage), y = Percentage)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\", color = \"black\", width = 0.7) +\n  geom_text(aes(label = paste0(round(Percentage, 1), \"%\")), \n            vjust = -0.5, size = 4, color = \"black\") +\n  theme_minimal() +\n  labs(\n    title = \"Percentage of Missing Values Across Columns Containing NA Values\",\n    x = \"Columns\",\n    y = \"Percentage of Missing Values\"\n  ) +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle =35, hjust = 1, size = 10),\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 12, face = \"bold\"),\n    axis.title.y = element_text(size = 12, face = \"bold\")\n  )\n\n\n\n\n\n\n\n\n\n\nHigh Missing Value Columns\n\nguards: With 87.3% missing values, this column has the highest rate of missingness. The data on tree guards might not have been consistently collected, possibly because it was optional or difficult to assess during the survey.\nsteward: At 74.4% missing values, this column reflects limited data availability on tree stewardship. This may be due to a lack of reporting or complexity in identifying individuals or groups responsible for tree care.\nproblems: This column has 66.4% missing values. It indicates incomplete data on issues affecting the trees, which could result from challenges in identifying or documenting tree-related problems.\n\nModerate and Low Missing Value Columns\n\nspc_common, spc_latin, health, sidewalk: These columns have around 50% missing values. These fields likely had better data collection protocols but still show gaps, potentially due to oversight or difficulty in identifying specific attributes (e.g., species or tree health conditions).\nbbl, bin, census tract, council district: These columns exhibit very low missing values (less than 2%). These administrative or geographic fields were likely easier to document consistently, but small gaps might have occurred due to technical issues or incomplete records.\n\nColumns with No Missing Values\n\nMany columns in the dataset have no missing values, which indicates robust data collection for these fields. These complete columns will form a reliable foundation for further analysis.\n\n\n\n\nCode\n# Step 1: Convert all columns to character type (except row identifier)\ntree_data_char &lt;- tree_data_with_na %&gt;%\n  mutate(across(everything(), as.character))\n\n# Step 2: Add a row identifier\ntree_data_char &lt;- tree_data_char %&gt;%\n  mutate(row = row_number())\n\n# Step 3: Reshape data into long format, excluding the `row` column\nna_heatmap_data &lt;- tree_data_char %&gt;%\n  pivot_longer(cols = -row, names_to = \"Column\", values_to = \"Value\") %&gt;%\n  mutate(Missing = is.na(Value) | Value == \"\" | Value == \"None\")  \n\n# Step 4: Plot the heatmap\nggplot(na_heatmap_data, aes(x = Column, y = row, fill = Missing)) +\n  geom_tile() +\n  scale_fill_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"white\")) +\n  theme_minimal() +\n  labs(\n    title = \"Heatmap of Missing Values (All Columns)\",\n    x = \"Columns\",\n    y = \"Rows\",\n    fill = \"Missing\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1),\n    axis.text.y = element_text(size = 7),  \n    plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\n\nMost columns have no missing values, represented by consistent white blocks across rows.\nSignificant missingness is observed in columns such as guards, steward, and problems (frequent red blocks).\nAdministrative columns like bbl, bin, and census tract have very few missing values, shown by minimal red blocks.\n\n\n\n\nCode\n# Step 1: Convert all columns to character type (except row identifier)\ntree_data_char &lt;- tree_data_with_na %&gt;%\n  mutate(across(everything(), as.character))\n\n# Step 2: Identify columns with NA values\ncolumns_with_na &lt;- tree_data_char %&gt;%\n  summarise(across(everything(), ~ sum(is.na(.) | . == \"\" | . == \"None\"))) %&gt;%\n  select(where(~ . &gt; 0)) %&gt;%\n  names()\n\n# Step 3: Filter to include only columns with NA values and add row identifier\ntree_data_filtered &lt;- tree_data_char %&gt;%\n  select(all_of(columns_with_na)) %&gt;%\n  mutate(row = row_number())\n\n# Step 4: Reshape data into long format, excluding the `row` column\nna_heatmap_data &lt;- tree_data_filtered %&gt;%\n  pivot_longer(cols = -row, names_to = \"Column\", values_to = \"Value\") %&gt;%\n  mutate(Missing = is.na(Value) | Value == \"\" | Value == \"None\")  # Detect missing values\n\n# Step 5: Plot the heatmap\nggplot(na_heatmap_data, aes(x = Column, y = row, fill = Missing)) +\n  geom_tile() +\n  scale_fill_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"white\")) +\n  theme_minimal() +\n  labs(\n    title = \"Heatmap of Missing Values (Columns with NA Values Only)\",\n    x = \"Columns\",\n    y = \"Rows\",\n    fill = \"Missing\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1),  \n    axis.text.y = element_text(size = 7),  \n    plot.title = element_text(hjust = 0.5)  \n  )\n\n\n\n\n\n\n\n\n\n\n\nThe graph focuses on columns with missing values, providing a concise view of the fields.\nguards and steward exhibit the highest missingness, with red blocks dominating most rows.\nModerate missingness is seen in columns like health, problems, and sidewalk, with scattered red blocks.\nColumns with lower missingness, such as bbl and bin, have fewer red blocks compared to others.\n\n\n2.2.1 Nature of Missing Values\n\nThe dataset contains missing values in various non-uniform forms. Some values are represented as standard NA in R, while others are explicitly recorded as \"None\". Additionally, there are instances where missing values are represented as blank strings (\"\") or blank spaces (\" \").\nThis inconsistency in representing missing values highlights variations in data collection practices, requiring careful preprocessing to standardize these entries for effective analysis.\n\n\n\n2.2.2 Implications\n\nColumns with high missing values (guards, steward, problems) may require imputation or exclusion, depending on their importance in the analysis.\nThe majority of columns with minimal or no missing data indicate that a significant portion of the dataset remains reliable for analysis.\nThe missing data pattern highlights a mix of inconsistencies in data collection efforts, emphasizing the need for preprocessing and careful handling of incomplete information.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "3.1 The Urban Canopy: NYC’s Tree Diversity\nLets first explore the overall composition of NYC’s tree population.\nCode\n# Count the number of trees for each species and select the top 15\ntop_species &lt;- tree_data %&gt;%\n  count(spc_common, sort = TRUE) %&gt;%\n  slice_max(order_by = n, n = 15)  \n\n# Count the number of trees for each species and select the least 15\nleast_species &lt;- tree_data %&gt;%\n  count(spc_common, sort = TRUE) %&gt;%\n  slice_min(order_by = n, n = 15) \n\n# Create the bar plot for Top 15 Most Common Tree Species\ntop_species_plot &lt;- ggplot(top_species, aes(x = reorder(spc_common, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"#4C72B0\") + \n  coord_flip() + \n  labs(\n    title = \"Top 15 Most Common Tree Species in NYC\", \n    x = \"Tree Species\", \n    y = \"Number of Trees\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),  \n    axis.text.y = element_text(face = \"bold\", size = 12),  \n    axis.text.x = element_text(face = \"bold\", size = 12),  \n    axis.title = element_text(face = \"bold\", size = 14))\n\n# Create the bar plot for 15 Least Seen Tree Species\nleast_species_plot &lt;- ggplot(least_species, aes(x = reorder(spc_common, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"#D55E00\") +  \n  coord_flip() + \n  labs(\n    title = \"15 Least Common Tree Species in NYC\", \n    x = \"Tree Species\", \n    y = \"Number of Trees\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),  \n    axis.text.y = element_text(face = \"bold\", size = 12),  \n    axis.text.x = element_text(face = \"bold\", size = 12),  \n    axis.title = element_text(face = \"bold\", size = 14)  \n  )\n\n# Arrange the plots side-by-side using gridExtra\ngrid.arrange(\n  top_species_plot, \n  least_species_plot, \n  ncol = 2  \n)\nThe bar plot highlights that the London planetree is the most common species in NYC, with over 30,000 trees, thanks to its adaptability to urban conditions such as tolerance to pollution, drought, and varying soil pH. While it contributes to NYC’s fall aesthetics with its dense canopies and abundant leaf shedding, its foliage lacks the vibrant colors of species like red maple and sweetgum, which define the iconic autumn palette. Other species like honeylocust, Callery pear, and pin oak also play significant roles in NYC’s tree population. However, the heavy reliance on the London planetree raises concerns about monoculture vulnerabilities, as pests or diseases could disproportionately affect it. Insights from this analysis suggest that diversifying species further could enhance ecological resilience and reduce maintenance challenges, such as managing the significant cleanup required for London planetree debris.\nThe second bar plot shows that NYC’s least common species, such as red pine, red horse chestnut, and Douglas-fir, have fewer than 30 trees. Their rarity reflects challenges in urban adaptation, including specific environmental needs and sensitivity to pollution. Trees like Osage-orange and Himalayan cedar highlight underutilized biodiversity, offering potential for conservation efforts. Rare species may require tailored strategies for survival in urban environments, such as improved soil preparation, reduced competition, or protection from pests. Incorporating a wider variety of species, including these rarer types, could reduce risks associated with monoculture and promote a more balanced and resilient urban forest.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#surviving-the-city-daily-struggles-of-nyc-trees",
    "href": "results.html#surviving-the-city-daily-struggles-of-nyc-trees",
    "title": "3  Results",
    "section": "3.2 Surviving the City: Daily Struggles of NYC Trees",
    "text": "3.2 Surviving the City: Daily Struggles of NYC Trees\nWe will see the prevalence of various tree problems in NYC, categorized into trunk, branch, and root issues using the faceted bar chart.\n\n\nCode\nproblem_columns &lt;- c(\"trunk_wire\", \"trnk_light\", \"trnk_other\", \n                     \"brch_light\", \"brch_shoe\", \"brch_other\",\n                     \"root_stone\", \"root_grate\", \"root_other\")\n\n# Prepare data\nproblem_data &lt;- tree_data %&gt;%\n  select(all_of(problem_columns)) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"problem_type\", values_to = \"presence\") %&gt;%\n  filter(!is.na(presence)) %&gt;%\n  group_by(problem_type, presence) %&gt;%\n  summarise(count = n(), .groups = \"drop\")\n\n# Create the faceted bar chart\nggplot(problem_data, aes(x = presence, y = count, fill = presence)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_manual(values = c(\"Yes\" = \"#FF6347\", \"No\" = \"#4682B4\")) +\n  facet_wrap(~ problem_type, scales = \"free_y\") +\n  labs(\n    title = \"Presence of Tree Problems by Type\",\n    x = \"Problem Presence (Yes/No)\",\n    y = \"Number of Trees\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(face = \"bold\", size = 14)\n  )\n\n\n\n\n\n\n\n\n\nBranch Problems\n\nBranch problems caused by lights (brch_light) have the highest occurrence among branch-related issues but remain rare compared to “No” responses.\nProblems like branch problems caused by shoes (brch_shoe) and other branch problems (brch_other) are negligible.\n\nRoot Problems\n\nRoot problems caused by stones (root_stone) are the most significant among all categories, with a notable number of “Yes” responses. This highlights the impact of paved areas on root health.\nRoot problems caused by grates (root_grate) and other root problems (root_other) are nearly nonexistent.\n\nTrunk Problems\n\nTrunk-related issues, including problems caused by wires (trunk_wire) and lights (trnk_light), are minimal across all trees.\nOther trunk problems (trnk_other) are extremely rare and show almost no significant impact.\n\nThe graph highlights root problems caused by stones as the primary concern, underscoring the need for improved urban planning around tree beds. Branch and trunk problems are negligible, indicating effective maintenance or fewer external stressors.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#rooting-for-good-health-tree-conditions-in-nyc-neighborhoods",
    "href": "results.html#rooting-for-good-health-tree-conditions-in-nyc-neighborhoods",
    "title": "3  Results",
    "section": "3.3 Rooting for Good Health: Tree Conditions in NYC Neighborhoods",
    "text": "3.3 Rooting for Good Health: Tree Conditions in NYC Neighborhoods\nThe stacked diverging bar chart provides a visual summary of tree health distribution.\n\n\nCode\n# Prepare data\ntree_data_filtered &lt;- tree_data %&gt;%\n  filter(!is.na(health), !is.na(borough)) %&gt;%  \n  group_by(borough, health) %&gt;%\n  summarise(count = n(), .groups = \"drop\") %&gt;%\n  mutate(\n    health = factor(health, levels = c(\"Poor\", \"Fair\", \"Good\"))  \n  )\n\n# Plot data\nggplot(tree_data_filtered, aes(x = count, y = borough, fill = health)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +  \n  scale_fill_manual(\n    values = c(\"Poor\" = \"#F44336\", \"Fair\" = \"#FFC107\", \"Good\" = \"#4CAF50\"),\n    name = \"Tree Health\"\n  ) +\n  labs(\n    title = \"Tree Health Distribution by Borough\",\n    x = \"Number of Trees\",\n    y = \"Borough\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    legend.title = element_text(face = \"bold\", size = 12))\n\n\n\n\n\n\n\n\n\nOverall Tree Health\n\nThe majority of trees in all boroughs are classified as being in Good health (green segment), indicating a generally healthy urban forest in NYC.\n\nBorough Comparison\n\nQueens has the highest number of trees overall, with a significant portion in good health, but it also has a noticeable proportion of trees in Fair health (yellow segment).\nStaten Island and Bronx have relatively fewer trees compared to Brooklyn and Queens, but a large proportion of their trees are in Good health.\n\nPoor Health Distribution\n\nTrees in Poor health (red segment) represent the smallest category across all boroughs.\nManhattan has the highest proportion of trees in poor health relative to its total number of trees, suggesting potential urban stress factors like pollution or limited green spaces.\n\nBrooklyn and Staten Island\n\nBrooklyn has the second-highest total number of trees, following Queens, and most are in good health.\nStaten Island, despite having the smallest tree count, shows a relatively balanced distribution among health categories compared to other boroughs.\n\nPotential for Action\n\nBoroughs like Manhattan and Queens may require targeted intervention to improve the health of trees classified as Fair or Poor, given their larger populations and stress factors.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#trunk-titans-small-vs.-mighty-trees",
    "href": "results.html#trunk-titans-small-vs.-mighty-trees",
    "title": "3  Results",
    "section": "3.4 Trunk Titans: Small vs. Mighty Trees",
    "text": "3.4 Trunk Titans: Small vs. Mighty Trees\nThe Cleveland dot plot shows the average tree diameter (DBH) for various tree species, highlighting differences in growth patterns and size among species in NYC.\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Aggregate mean diameter by species\nspecies_avg &lt;- tree_data %&gt;%\n  group_by(spc_common) %&gt;%\n  summarise(mean_dbh = mean(tree_dbh, na.rm = TRUE)) %&gt;%\n  arrange(desc(mean_dbh)) %&gt;%\n  slice(1:50) \n\n# Create the plot\nggplot(species_avg, aes(x = mean_dbh, y = reorder(spc_common, mean_dbh))) +\n  geom_point(color = \"blue\", size = 3) +\n  labs(\n    title = \"Average Tree Diameter by Species\",\n    x = \"Average Diameter (DBH)\",\n    y = \"Tree Species\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n    axis.text.y = element_text(size = 12),\n    axis.text.x = element_text(size = 12),\n    axis.title.x = element_text(face = \"bold\", size = 12),\n    axis.title.y = element_text(face = \"bold\", size = 12)\n  )\n\n\n\n\n\n\n\n\n\nTop Species with Largest Average Diameters\n\nSpecies like London planetree, silver maple, and weeping willow stand out with the largest average tree diameters, exceeding 16 DBH (Diameter at Breast Height). These species are known for their fast growth and adaptability, often resulting in larger tree sizes.\n\nSpecies with Smallest Average Diameters\n\nAt the lower end of the spectrum, species such as Ohio buckeye, ginkgo, and American linden exhibit smaller average diameters (around 8 DBH). These species may be slower-growing or less suitable for NYC’s urban conditions.\n\nInsights for Urban Planning\n\nLarge-diameter species like the London planetree may require more space and resources but provide substantial canopy coverage. In contrast, smaller-diameter species may be suitable for tighter urban spaces.\n\nSpecies-Specific Growth Patterns\n\nThe differences in average diameter could reflect species-specific growth characteristics, planting preferences, or environmental adaptability in NYC.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#paving-the-way-proportion-of-sidewalks-affected-by-trees",
    "href": "results.html#paving-the-way-proportion-of-sidewalks-affected-by-trees",
    "title": "3  Results",
    "section": "3.5 Paving the Way: Proportion of Sidewalks Affected by Trees",
    "text": "3.5 Paving the Way: Proportion of Sidewalks Affected by Trees\nThe pie chart illustrates the proportion of trees in NYC with adjacent sidewalk damage.\n\n\nCode\n# Calculate proportions\nsidewalk_proportion &lt;- tree_data %&gt;%\n  count(sidewalk) %&gt;%\n  mutate(prop = n / sum(n))\n\n# Enhanced pie chart\nggplot(sidewalk_proportion, aes(x = \"\", y = prop, fill = sidewalk)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  geom_text(\n    aes(label = scales::percent(prop, accuracy = 0.1)),\n    position = position_stack(vjust = 0.5),\n    color = \"white\",\n    size = 5\n  ) +\n  labs(\n    title = \"Proportion of Trees with Sidewalk Damage\",\n    fill = \"Sidewalk Condition\"\n  ) +\n  theme_void() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n    legend.position = \"right\",\n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 10)\n  ) +\n  scale_fill_manual(values = c(\"Damage\" = \"#F44336\", \"NoDamage\" = \"#4CAF50\"))\n\n\n\n\n\n\n\n\n\nMajority with No Sidewalk Damage:\n\nA significant proportion (71.5%) of trees are adjacent to sidewalks that are in good condition, without visible damage.\n\nMinority with Sidewalk Damage:\n\nApproximately 28.5% of trees are associated with sidewalks showing signs of damage.\n\nUrban Impact Insight:\n\nThis suggests that while the majority of sidewalks are resilient to tree-related damage, a substantial portion still suffers from issues, potentially due to tree roots disrupting pavement structures.\n\nActionable Consideration:\n\nEfforts could focus on mitigating damage through better tree placement or root management strategies to reduce future sidewalk damage while preserving urban greenery.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#pathways-to-tree-health-exploring-curb-placement-sidewalk-conditions-and-their-impact",
    "href": "results.html#pathways-to-tree-health-exploring-curb-placement-sidewalk-conditions-and-their-impact",
    "title": "3  Results",
    "section": "3.6 Pathways to Tree Health: Exploring Curb Placement, Sidewalk Conditions, and Their Impact",
    "text": "3.6 Pathways to Tree Health: Exploring Curb Placement, Sidewalk Conditions, and Their Impact\nThe alluvial plot visualizes the relationship between curb location, sidewalk damage, and tree health.\n\n\nCode\nlibrary(ggalluvial)\n# Prepare data for alluvial plot\nalluvial_data &lt;- tree_data %&gt;%\n  group_by(curb_loc, sidewalk, health) %&gt;%\n  summarise(count = n(), .groups = \"drop\")\n\n# Alluvial plot with improved axis labels\nggplot(alluvial_data, aes(axis1 = curb_loc, axis2 = sidewalk, axis3 = health, y = count)) +\n  geom_alluvium(aes(fill = health)) +\n  geom_stratum() +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 4) + \n  labs(\n    title = \"Flow of Trees from Curb Location to Sidewalk Damage to Health\",\n    x = \"Tree Characteristics\",\n    y = \"Number of Trees\"\n  ) +\n  scale_fill_manual(values = c(\"Good\" = \"#4CAF50\", \"Fair\" = \"#FFC107\", \"Poor\" = \"#F44336\")) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(hjust = 1, size = 12), \n    axis.text.y = element_text(size = 12), \n    axis.title = element_text(size = 12, face = \"bold\"), \n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"))\n\n\n\n\n\n\n\n\n\nCurb Location\n\nMost trees are located OnCurb, indicating that urban tree planting often aligns with curb locations.\nTrees OffsetFromCurb represent a smaller proportion, likely in areas with wider sidewalks or designated tree beds.\n\nSidewalk Damage\n\nTrees OnCurb are more associated with Sidewalk Damage, likely due to root growth interfering with pavement structures.\nTrees OffsetFromCurb show a stronger association with NoDamage, suggesting reduced impact on sidewalks.\n\nTree Health\n\nThe majority of trees are categorized as Good, irrespective of their curb location or sidewalk condition.\nTrees in Poor health are more prevalent where Sidewalk Damage is present, indicating that environmental stressors may contribute to declining health.\n\nRelationships\n\nA clear flow is visible where trees OnCurb with Sidewalk Damage tend to have more Fair or Poor health.\nTrees OffsetFromCurb and with NoDamage predominantly exhibit Good health.\n\nThe plot highlights the interplay between tree placement, sidewalk integrity, and tree health. Proper placement (e.g., OffsetFromCurb) could mitigate sidewalk damage and promote better tree health.\n\n\nCode\nlibrary(ggplot2)\n\nggplot(tree_data, aes(x = sidewalk, y = tree_dbh, fill = sidewalk)) +\n  geom_violin() +\n  labs(\n    title = \"Tree Diameter and Sidewalk Damage\",\n    x = \"Sidewalk Condition\",\n    y = \"Tree Diameter (DBH)\"\n  ) +\n  scale_fill_manual(values = c(\"Damage\" = \"#F44336\", \"NoDamage\" = \"#4CAF50\")) +\n  coord_cartesian(ylim = c(0, 100)) +  # Adjust the y-axis limits to zoom in\n  theme_minimal()",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5  Conclusion",
    "section": "",
    "text": "The NYC Tree Census project offers a comprehensive exploration of the city’s urban forest, providing critical insights into the composition, health, and distribution of tree species. By leveraging diverse exploratory data analysis techniques, we have identified key trends and uncovered actionable insights for urban planning, biodiversity, and tree management.\nThis project underscores the value of data-informed urban forestry for a sustainable and resilient NYC, providing actionable strategies to enhance the city’s green infrastructure.\nThis project serves as a blueprint for data-driven urban forestry management, enabling policymakers, and city planners to make informed decisions. By leveraging NYC’s vast dataset of tree attributes, we have highlighted opportunities to increase biodiversity, strengthen ecological resilience, and enhance tree health. These insights pave the way for a greener, healthier, and more sustainable future for NYC’s urban forest.\nThis analysis not only enhances public awareness but also provides a strong foundation for future research and management initiatives. With continued analysis and integration of predictive models, NYC can continue to lead as a pioneer in urban forestry, ensuring the sustainability of its natural ecosystem for generations to come.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion</span>"
    ]
  }
]